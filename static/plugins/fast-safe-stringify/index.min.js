define((function(require,exports,module){module.exports=stringify,stringify.default=stringify,stringify.stable=deterministicStringify,stringify.stableStringify=deterministicStringify,stringify.version="2.0.8";var arr=[],replacerStack=[];function stringify(obj,replacer,spacer){var res;decirc(obj,"",[],void 0);try{res=0===replacerStack.length?JSON.stringify(obj,replacer,spacer):JSON.stringify(obj,replaceGetterValues(replacer),spacer)}catch(_){return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]")}finally{for(;0!==arr.length;){var part=arr.pop();4===part.length?Object.defineProperty(part[0],part[1],part[3]):part[0][part[1]]=part[2]}}return res}function decirc(val,k,stack,parent){var i;if("object"==typeof val&&null!==val){for(i=0;i<stack.length;i++)if(stack[i]===val){var propertyDescriptor=Object.getOwnPropertyDescriptor(parent,k);return void(void 0!==propertyDescriptor.get?propertyDescriptor.configurable?(Object.defineProperty(parent,k,{value:"[Circular]"}),arr.push([parent,k,val,propertyDescriptor])):replacerStack.push([val,k]):(parent[k]="[Circular]",arr.push([parent,k,val])))}if(stack.push(val),Array.isArray(val))for(i=0;i<val.length;i++)decirc(val[i],i,stack,val);else{var keys=Object.keys(val);for(i=0;i<keys.length;i++){var key=keys[i];decirc(val[key],key,stack,val)}}stack.pop()}}function compareFunction(a,b){return a<b?-1:a>b?1:0}function deterministicStringify(obj,replacer,spacer){var tmp=deterministicDecirc(obj,"",[],void 0)||obj,res;try{res=0===replacerStack.length?JSON.stringify(tmp,replacer,spacer):JSON.stringify(tmp,replaceGetterValues(replacer),spacer)}catch(_){return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]")}finally{for(;0!==arr.length;){var part=arr.pop();4===part.length?Object.defineProperty(part[0],part[1],part[3]):part[0][part[1]]=part[2]}}return res}function deterministicDecirc(val,k,stack,parent){var i;if("object"==typeof val&&null!==val){for(i=0;i<stack.length;i++)if(stack[i]===val){var propertyDescriptor=Object.getOwnPropertyDescriptor(parent,k);return void(void 0!==propertyDescriptor.get?propertyDescriptor.configurable?(Object.defineProperty(parent,k,{value:"[Circular]"}),arr.push([parent,k,val,propertyDescriptor])):replacerStack.push([val,k]):(parent[k]="[Circular]",arr.push([parent,k,val])))}try{if("function"==typeof val.toJSON)return}catch(_){return}if(stack.push(val),Array.isArray(val))for(i=0;i<val.length;i++)deterministicDecirc(val[i],i,stack,val);else{var tmp={},keys=Object.keys(val).sort(compareFunction);for(i=0;i<keys.length;i++){var key=keys[i];deterministicDecirc(val[key],key,stack,val),tmp[key]=val[key]}if(void 0===parent)return tmp;arr.push([parent,k,val]),parent[k]=tmp}stack.pop()}}function replaceGetterValues(replacer){return replacer=void 0!==replacer?replacer:function(k,v){return v},function(key,val){if(replacerStack.length>0)for(var i=0;i<replacerStack.length;i++){var part=replacerStack[i];if(part[1]===key&&part[0]===val){val="[Circular]",replacerStack.splice(i,1);break}}return replacer.call(this,key,val)}}}));